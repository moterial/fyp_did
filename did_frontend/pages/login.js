import Head from 'next/head'
import styles from '../styles/Home.module.css'
import { Card, CardHeader, CardBody, CardFooter,Stack,VStack,Heading,Text,Divider,ButtonGroup,Button,Image,Center,Flex,useColorModeValue,Link,Box,FormControl,FormLabel,Input,Checkbox} from '@chakra-ui/react'
import Header from '../component/header'
import React,{ useEffect, useState} from 'react'


export default function Login() {
  const [backendData, setBackendData] = useState({})
  const [accountLogin, setAccountLogin] = useState(false)
  const [faceLogin, setfaceLogin] = useState(false)
  const [username, setUsername] = useState('')
  const [password, setPassword] = useState('')

  useEffect(() => {
    const token = localStorage.getItem('token')
    if(token){
      

    }


    
  }, [])

  const handleUsernameChange = (e) => {
    setUsername(e.target.value)
  }

  const handlePasswordChange = (e) => {
    setPassword(e.target.value)
  }

  function handleAccountLogin(){
    //get the username and password from the input
    //send the username and password to the backend
    //if the username and password is correct, the backend will send back a token
    //store the token in the local storage
    //redirect to the dashboard page
    const data = {
      username: username,
      password: password
    }
    fetch('/api/user/login', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(data)
    })
    .then((res) => res.json())
    .then((data) => {
      console.log(data)
      if(data.token){
        localStorage.setItem('token', data.token)
        window.location.href = '/'
      }
    })
  }



  return (
    <>
      <Head>
        <title>Login</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header children='login'/>
      <main className={styles.main}>
          {
            (!accountLogin && !faceLogin)  &&
            <Card maxW='md'>
              <CardBody>
                <Center>
                  <Image
                    src='/assets/face-id.png'
                    boxSize='200px'
                  />
                </Center>
                <Stack mt='6' spacing='3'>
                  <Center>
                    <Button colorScheme='teal' size='lg'>
                      FaceID Login
                    </Button>
                  </Center>
                </Stack>
              </CardBody>
              <Divider />
              <CardFooter>
                <ButtonGroup spacing='2'>
                  <Button onClick={() => setAccountLogin(true)} variant='solid' colorScheme='blue' >
                    Login by username and pw
                  </Button>
                  <Button variant='ghost' colorScheme='blue'>
                    register
                  </Button>
                </ButtonGroup>
              </CardFooter>
            </Card>
          }
          {
            accountLogin  && 
            <Flex
              minH={'100vh'}
              justify={'center'}
            >
              <Stack spacing={8}  maxW={'lg'} py={5} px={6}>
                <Stack align={'center'}>
                  <Heading fontSize={'4xl'}>Sign in to your account</Heading>
                  <Text fontSize={'lg'} color={'gray.600'}>
                    to enjoy all of our cool <Link color={'blue.400'}>features</Link> ✌️
                  </Text>
                </Stack>
                <Box
                  rounded={'lg'}
                  bg={useColorModeValue('white', 'gray.700')}
                  boxShadow={'lg'}
                  p={8}>
                  <Stack spacing={4}>
                    <FormControl id="email">
                      <FormLabel>Username</FormLabel>
                      <Input type="text" value={username} onChange={handleUsernameChange} />
                    </FormControl>
                    <FormControl id="password">
                      <FormLabel>Password</FormLabel>
                      <Input type="password" value={password} onChange={handlePasswordChange} />
                    </FormControl>
                    <Stack spacing={10}>
                      <Stack
                        direction={{ base: 'column', sm: 'row' }}
                        align={'start'}
                        justify={'space-between'}>
                        <Link color={'blue.400'}>Forgot password?</Link>
                      </Stack>
                      <Button
                      onClick={() => handleAccountLogin()}
                        bg={'teal.500'}
                        color={'white'}
                        _hover={{
                          bg: 'teal.200',
                        }}>
                        Sign in
                      </Button>
                    </Stack>
                  </Stack>
                </Box>
              </Stack>
            </Flex>

          }
      </main>
    </>

    
  )
}
